name: Install Ubuntu WSL
description: 'Install WSL from the store'

inputs:
  distro:
    description: Distro name as shown in 'wsl -l -v'. Leave blank to install no distro.
    required: false
    default: ""
  useStore:
    description: Whether to use the Microsoft Store for distro installs or not
    required: false
    default: false

runs:
  using: 'composite'
  steps:
    - name: Install WSL
      shell: powershell
      continue-on-error: true
      run: |
        Write-Output "::group::Install Windows Subsystem for Linux"
        winget install --name 'Windows Subsystem for Linux' --accept-source-agreements --accept-package-agreements --silent --verbose
        Write-Output "::endgroup::"

    - name: Install the new distro
      if: ${{ inputs.distro != '' }}
      shell: powershell
      run: |
        # Install the new distro
        switch ( "${{ inputs.distro }}" )
        {
            "Ubuntu"         { $storeId="9PDXGNCFSCZV" ; $launcher="ubuntu.exe"         ;  $appxname="Ubuntu"          }
            "Ubuntu-Preview" { $storeId="9P7BDVKVNXZ6" ; $launcher="ubuntupreview.exe"  ;  $appxname="UbuntuPreview"   }
            "Ubuntu-22.04"   { $storeId="9PN20MSR04DW" ; $launcher="ubuntu2204.exe"     ;  $appxname="Ubuntu22.04LTS"  }
            "Ubuntu-20.04"   { $storeId="9MTTCL66CPXJ" ; $launcher="ubuntu2004.exe"     ;  $appxname="Ubuntu20.04LTS"  }
            "Ubuntu-18.04"   { $storeId="9PNKSF5ZN4SW" ; $launcher="ubuntu1804.exe"     ;  $appxname="Ubuntu18.04LTS"  }
            default          { Write-Output "Error: Unknown distro ${distro}" ; Exit(1) }
        }

        # Uninstall pre-existing appx
        $pkgFullName = (Get-AppxPackage | Where-Object Name -like "CanonicalGroupLimited.${appxname}").PackageFullName
        if ( "$pkgFullName" -ne "" ) {
          Remove-AppxPackage "${pkgFullName}" 3>&1 2>&1 | Out-Null
        }
        
        # Unregister leftover distros
        $env:WSL_UTF8=1
        wsl.exe --shutdown
        wsl.exe --unregister ${{ inputs.distro }} 3>&1 2>&1 | Out-Null

        Write-Output "::group::Install a new distro"
        if ( "${{ inputs.useStore }}" -eq "true" ) {
          winget install --id "${storeId}" --accept-source-agreements --accept-package-agreements --silent
          & ${launcher} install --root --ui=none
        } else {
          wsl.exe --install "${{ inputs.distro }}" --web-download --no-launch
        }
        Write-Output "::endgroup::"

        # Testing successful install
        wsl.exe -d "${{ inputs.distro }}" -- echo Created a new distro with user: '$(whoami)'

        if ( ! $? ) { Exit(1) }
